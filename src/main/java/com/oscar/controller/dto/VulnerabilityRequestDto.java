package com.oscar.controller.dto;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import lombok.Data;
import org.springframework.data.domain.Sort;

import static org.apache.commons.lang.StringUtils.isBlank;

@Data
public class VulnerabilityRequestDto {

    private String vendor;

    private String name;

    private String url;

    private String homePage;

    private int searchLimit = 10;

    private int searchOffset = 0;

    private SortRequest sort = SortRequest.MODIFIED;

    public enum SortRequest {
        SEVERITY("severity", "meta.severity"),
        PUBLISHED("published", "meta.published"),
        MODIFIED("modified", "meta.modified");

        private final String sortBy;
        private final String path;
        private Sort.Direction order;

        SortRequest(final String sortBy, final String path) {
            this.sortBy = sortBy;
            this.path = path;
            this.order = Sort.Direction.DESC;
        }

        @JsonCreator
        public static SortRequest fromText(@JsonProperty("sortBy") String sortBy, @JsonProperty("order") String order) {
            if (isBlank(sortBy)) {
                return SortRequest.SEVERITY;
            }

            if (sortBy.toLowerCase().equals(SEVERITY.getSortBy())) {
                return SEVERITY.setOrderAndGet(order);
            } else if (sortBy.toLowerCase().equals(PUBLISHED.getSortBy())) {
                return PUBLISHED.setOrderAndGet(order);
            } else if (sortBy.equals(MODIFIED.getSortBy())) {
                return MODIFIED.setOrderAndGet(order);
            }

            return SEVERITY;
        }

        public String getSortBy() {
            return sortBy;
        }

        public String getPath() {
            return path;
        }

        public Sort.Direction getOrder() {
            return order;
        }

        public SortRequest setOrderAndGet(String order) {
            if (isBlank(order)) {
                order = "DESC";
            }
            this.order = Sort.Direction.fromString(order);
            return this;
        }

    }
}
